import RPi.GPIO as GPIO
import time

# GPIO Mode (BOARD / BCM)
GPIO.setmode(GPIO.BCM)

# Set GPIO Pins
GPIO_TRIGGER = 21
GPIO_ECHO = 20
GPIO_LED = 17  # LED GPIO pin

# Set GPIO direction (IN / OUT)
GPIO.setup(GPIO_TRIGGER, GPIO.OUT)
GPIO.setup(GPIO_ECHO, GPIO.IN)
GPIO.setup(GPIO_LED, GPIO.OUT)  # Set LED pin as output

def distance():
    # Set Trigger to HIGH
    GPIO.output(GPIO_TRIGGER, True)

    # Set Trigger after 0.01ms to LOW
    time.sleep(0.00001)
    GPIO.output(GPIO_TRIGGER, False)

    StartTime = time.time()
    StopTime = time.time()

    # Save StartTime
    while GPIO.input(GPIO_ECHO) == 0:
        StartTime = time.time()

    # Save time of arrival
    while GPIO.input(GPIO_ECHO) == 1:
        StopTime = time.time()

    # Time difference between start and arrival
    TimeElapsed = StopTime - StartTime
    # Multiply with the sonic speed (34326 cm/s)
    # and divide by 2, because there and back
    distance = (TimeElapsed * 34326) / 2

    return distance

try:
    for x in range(100):
        dist = distance()
        print("Measured Distance = %.1f cm" % dist)
        f= open("ultrasounddata.csv", "a")
        f.write('\n'+"Actual Distance =, 10cm, Measured Distance, %.2f" % dist)

        # LED control logic
        if dist < 5:  # 5 cm is approximately 2 inches
            GPIO.output(GPIO_LED, GPIO.HIGH)
            print("WARNING!!!!")
        else:
            GPIO.output(GPIO_LED, GPIO.LOW)
        
        time.sleep(0.01)
finally:
    GPIO.cleanup()
